<#--
/*******************************************************************************
  SPI Driver Freemarker Template File

  Company:
    Microchip Technology Inc.

  File Name:
    drv_spi_idx0.h.ftl

  Summary:
    SPI Driver Freemarker Template File

  Description:

*******************************************************************************/

/*******************************************************************************
Copyright (c) 2014 released Microchip Technology Inc.  All rights reserved.

Microchip licenses to you the right to use, modify, copy and distribute
Software only when embedded on a Microchip microcontroller or digital signal
controller that is integrated into your product or third party product
(pursuant to the sublicense terms in the accompanying license agreement).

You should refer to the license agreement accompanying this Software for
additional information regarding your rights and obligations.

SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS  WITHOUT  WARRANTY  OF  ANY  KIND,
EITHER EXPRESS  OR  IMPLIED,  INCLUDING  WITHOUT  LIMITATION,  ANY  WARRANTY  OF
MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A  PARTICULAR  PURPOSE.
IN NO EVENT SHALL MICROCHIP OR  ITS  LICENSORS  BE  LIABLE  OR  OBLIGATED  UNDER
CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION,  BREACH  OF  WARRANTY,  OR
OTHER LEGAL  EQUITABLE  THEORY  ANY  DIRECT  OR  INDIRECT  DAMAGES  OR  EXPENSES
INCLUDING BUT NOT LIMITED TO ANY  INCIDENTAL,  SPECIAL,  INDIRECT,  PUNITIVE  OR
CONSEQUENTIAL DAMAGES, LOST  PROFITS  OR  LOST  DATA,  COST  OF  PROCUREMENT  OF
SUBSTITUTE  GOODS,  TECHNOLOGY,  SERVICES,  OR  ANY  CLAIMS  BY  THIRD   PARTIES
(INCLUDING BUT NOT LIMITED TO ANY DEFENSE  THEREOF),  OR  OTHER  SIMILAR  COSTS.
*******************************************************************************/
-->

<#macro DRV_SPI_H INST_INDEX>
/* SPI Driver Instance ${INST_INDEX} Configuration */
#define DRV_SPI_SPI_ID_IDX${INST_INDEX} 				${.vars["CONFIG_DRV_SPI_SPI_ID_IDX${INST_INDEX}"]}
    <#if .vars["CONFIG_DRV_SPI_TASK_MODE_ISR_IDX${INST_INDEX}"] == true>
#define DRV_SPI_TASK_MODE_IDX${INST_INDEX} 				DRV_SPI_TASK_MODE_ISR
    <#else>
#define DRV_SPI_TASK_MODE_IDX${INST_INDEX} 				DRV_SPI_TASK_MODE_POLLED
    </#if>
    <#if .vars["CONFIG_DRV_SPI_SPI_MODE_MASTER_IDX${INST_INDEX}"] == true>
#define DRV_SPI_SPI_MODE_IDX${INST_INDEX}				DRV_SPI_MODE_MASTER
    <#else>
#define DRV_SPI_SPI_MODE_IDX${INST_INDEX}				DRV_SPI_MODE_SLAVE
    </#if>
    <#if .vars["CONFIG_DRV_SPI_ALLOW_IDLE_RUN_IDX${INST_INDEX}"] == true>
#define DRV_SPI_ALLOW_IDLE_RUN_IDX${INST_INDEX}			true
    <#else>
#define DRV_SPI_ALLOW_IDLE_RUN_IDX${INST_INDEX}			false
    </#if>
    <#if .vars["CONFIG_DRV_SPI_SPI_PROTOCOL_TYPE_IDX${INST_INDEX}"] == "DRV_SPI_PROTOCOL_TYPE_FRAMED">
#define DRV_SPI_SPI_PROTOCOL_TYPE_IDX${INST_INDEX} 		DRV_SPI_PROTOCOL_TYPE_FRAMED
#define DRV_SPI_FRAME_SYNC_PULSE_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_FRAME_SYNC_PULSE_IDX${INST_INDEX}"]}
#define DRV_SPI_FRAME_PULSE_POLARITY_IDX${INST_INDEX} 	${.vars["CONFIG_DRV_SPI_FRAME_PULSE_POLARITY_IDX${INST_INDEX}"]}
#define DRV_SPI_FRAME_PULSE_DIRECTION_IDX${INST_INDEX} 	${.vars["CONFIG_DRV_SPI_FRAME_PULSE_DIRECTION_IDX${INST_INDEX}"]}
#define DRV_SPI_FRAME_PULSE_EDGE_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_FRAME_PULSE_EDGE_IDX${INST_INDEX}"]}
#define DRV_SPI_FRAME_PULSE_WIDTH_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_FRAME_PULSE_WIDTH_IDX${INST_INDEX}"]}
    <#elseif .vars["CONFIG_DRV_SPI_SPI_PROTOCOL_TYPE_IDX${INST_INDEX}"] == "DRV_SPI_PROTOCOL_TYPE_AUDIO">
#define DRV_SPI_AUDIO_TRANSMIT_MODE_IDX${INST_INDEX}  	${.vars["CONFIG_DRV_SPI_AUDIO_TRANSMIT_MODE_IDX${INST_INDEX}"]}
#define DRV_SPI_AUDIO_TRANSMIT_MODE_IDX${INST_INDEX}  	${.vars["CONFIG_DRV_SPI_AUDIO_PROTOCOL_MODE_IDX${INST_INDEX}"]}
    <#else>
#define DRV_SPI_SPI_PROTOCOL_TYPE_IDX${INST_INDEX} 		DRV_SPI_PROTOCOL_TYPE_STANDARD
        <#if .vars["CONFIG_DRV_SPI_SPI_MODE_SLAVE_IDX${INST_INDEX}"] == true>
            <#if .vars["CONFIG_DRV_SPI_SPI_USE_SS_FOR_SLAVE_IDX${INST_INDEX}"] == true>
#define DRV_SPI_SPI_USE_SS_FOR_SLAVE_IDX${INST_INDEX}   true
            <#else>
#define DRV_SPI_SPI_USE_SS_FOR_SLAVE_IDX${INST_INDEX}   false
            </#if>
        </#if>
    </#if>
    <#if .vars["CONFIG_DRV_SPI_COMM_WIDTH_8_BIT_IDX${INST_INDEX}"] == true>
#define DRV_SPI_COMM_WIDTH_IDX${INST_INDEX} 			SPI_COMMUNICATION_WIDTH_8BITS
    <#elseif .vars["CONFIG_DRV_SPI_COMM_WIDTH_16_BIT_IDX${INST_INDEX}"] == true>
#define DRV_SPI_COMM_WIDTH_IDX${INST_INDEX} 			SPI_COMMUNICATION_WIDTH_16BITS
    <#else>
#define DRV_SPI_COMM_WIDTH_IDX${INST_INDEX} 			SPI_COMMUNICATION_WIDTH_32BITS
    </#if>
<#if .vars["CONFIG_DRV_SPI_CLOCK_SOURCE_IDX${INST_INDEX}"] == .vars["CONFIG_DRV_SPI_CLOCK_SOURCE2_IDX${INST_INDEX}"]>
#define DRV_SPI_CLOCK_SOURCE_IDX${INST_INDEX} 		    ${.vars["CONFIG_DRV_SPI_CLOCK_SOURCE_IDX${INST_INDEX}"]}
</#if>
<#if .vars["CONFIG_DRV_SPI_CLOCK_SOURCE_IDX${INST_INDEX}"] == "SPI_BAUD_RATE_PBCLK_CLOCK">
#define DRV_SPI_SPI_CLOCK_IDX${INST_INDEX} 				${.vars["CONFIG_DRV_SPI_SPI_CLOCK_IDX${INST_INDEX}"]}
</#if>
#define DRV_SPI_BAUD_RATE_IDX${INST_INDEX} 				${.vars["CONFIG_DRV_SPI_BAUD_RATE_IDX${INST_INDEX}"]}
    <#if .vars["CONFIG_DRV_SPI_BUFFER_STANDARD_IDX${INST_INDEX}"]  == true>
#define DRV_SPI_BUFFER_TYPE_IDX${INST_INDEX} 			DRV_SPI_BUFFER_TYPE_STANDARD
    <#else>
#define DRV_SPI_BUFFER_TYPE_IDX${INST_INDEX} 			DRV_SPI_BUFFER_TYPE_ENHANCED
    </#if>
#define DRV_SPI_CLOCK_MODE_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_CLOCK_MODE_IDX${INST_INDEX}"]}
#define DRV_SPI_INPUT_PHASE_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_INPUT_PHASE_IDX${INST_INDEX}"]}
#define DRV_SPI_TRANSMIT_DUMMY_BYTE_VALUE_IDX${INST_INDEX}      ${.vars["CONFIG_DRV_SPI_TRANSMIT_DUMMY_BYTE_VALUE_IDX${INST_INDEX}"]}

    <#if .vars["CONFIG_DRV_SPI_TASK_MODE_ISR_IDX${INST_INDEX}"] == true>
#define DRV_SPI_TX_INT_SOURCE_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_TX_INT_SOURCE_IDX${INST_INDEX}"]}
#define DRV_SPI_RX_INT_SOURCE_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_RX_INT_SOURCE_IDX${INST_INDEX}"]}
#define DRV_SPI_ERROR_INT_SOURCE_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_ERROR_INT_SOURCE_IDX${INST_INDEX}"]}
        <#if CONFIG_PIC32MX == true>
#define DRV_SPI_INT_VECTOR_IDX${INST_INDEX}				${.vars["CONFIG_DRV_SPI_INT_VECTOR_IDX${INST_INDEX}"]}
#define DRV_SPI_INT_PRIORITY_IDX${INST_INDEX}			${.vars["CONFIG_DRV_SPI_INT_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_INT_SUB_PRIORITY_IDX${INST_INDEX}		${.vars["CONFIG_DRV_SPI_INT_SUB_PRIORITY_IDX${INST_INDEX}"]}        
        <#else>
#define DRV_SPI_TX_INT_VECTOR_IDX${INST_INDEX}			${.vars["CONFIG_DRV_SPI_TX_INT_VECTOR_IDX${INST_INDEX}"]}
#define DRV_SPI_RX_INT_VECTOR_IDX${INST_INDEX}			${.vars["CONFIG_DRV_SPI_RX_INT_VECTOR_IDX${INST_INDEX}"]}
#define DRV_DRV_SPI_ERROR_INT_VECTOR_IDX${INST_INDEX}	${.vars["CONFIG_DRV_SPI_ERROR_INT_VECTOR_IDX${INST_INDEX}"]}
#define DRV_SPI_TX_INT_PRIORITY_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_TX_INT_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_TX_INT_SUB_PRIORITY_IDX${INST_INDEX} 	${.vars["CONFIG_DRV_SPI_TX_INT_SUB_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_RX_INT_PRIORITY_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_RX_INT_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_RX_INT_SUB_PRIORITY_IDX${INST_INDEX} 	${.vars["CONFIG_DRV_SPI_RX_INT_SUB_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_ERROR_INT_PRIORITY_IDX${INST_INDEX} 	${.vars["CONFIG_DRV_SPI_ERROR_INT_PRIORITY_IDX${INST_INDEX}"]}
#define DRV_SPI_ERROR_INT_SUB_PRIORITY_IDX${INST_INDEX} ${.vars["CONFIG_DRV_SPI_ERROR_INT_SUB_PRIORITY_IDX${INST_INDEX}"]}
        </#if>
    </#if>
#define DRV_SPI_QUEUE_SIZE_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_QUEUE_SIZE_IDX${INST_INDEX}"]}
#define DRV_SPI_RESERVED_JOB_IDX${INST_INDEX} 			${.vars["CONFIG_DRV_SPI_RESERVED_JOB_IDX${INST_INDEX}"]}
    <#if .vars["CONFIG_DRV_SPI_BUFFER_STANDARD_IDX${INST_INDEX}"] == true && .vars["CONFIG_DRV_SPI_TASK_MODE_POLLED_IDX${INST_INDEX}"] == true>
#define DRV_SPI_TRANS_PER_SM_RUN_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_TRANSACTIONS_PER_SM_RUN_IDX${INST_INDEX}"]}
    </#if>
    <#if .vars["CONFIG_DRV_SPI_USE_DMA_IDX${INST_INDEX}"] == true>
    <#assign txIndex=.vars["CONFIG_DRV_SPI_TX_DMA_INST_IDX${INST_INDEX}"]/>
#define DRV_SPI_TX_DMA_CHANNEL_IDX${INST_INDEX} 		${.vars["CONFIG_SYS_DMA_CHANNEL_ID_IDX${txIndex}"]}
#define DRV_SPI_TX_DMA_THRESHOLD_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_TX_DMA_THRESHOLD_IDX${INST_INDEX}"]}
    <#assign rxIndex=.vars["CONFIG_DRV_SPI_RX_DMA_INST_IDX${INST_INDEX}"]/>
#define DRV_SPI_RX_DMA_CHANNEL_IDX${INST_INDEX} 		${.vars["CONFIG_SYS_DMA_CHANNEL_ID_IDX${rxIndex}"]}
#define DRV_SPI_RX_DMA_THRESHOLD_IDX${INST_INDEX} 		${.vars["CONFIG_DRV_SPI_RX_DMA_THRESHOLD_IDX${INST_INDEX}"]}
    </#if>
</#macro>
<#if CONFIG_DRV_SPI_IDX0 == true>
    <@DRV_SPI_H "0"/>
</#if>
<#if CONFIG_DRV_SPI_IDX1 == true>
    <@DRV_SPI_H "1"/>
</#if>
<#if CONFIG_DRV_SPI_IDX2 == true>
    <@DRV_SPI_H "2"/>
</#if>
<#if CONFIG_DRV_SPI_IDX3 == true>
    <@DRV_SPI_H "3"/>
</#if>
<#if CONFIG_DRV_SPI_IDX4 == true>
    <@DRV_SPI_H "4"/>
</#if>
<#if CONFIG_DRV_SPI_IDX5 == true>
    <@DRV_SPI_H "5"/>
</#if>
