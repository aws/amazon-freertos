menu "Timer"
    depends on HAVE_TMR

enum TMR_SOURCE_CLOCK
	"DRV_TMR_CLKSOURCE_PCK"
	|| "DRV_TMR_CLKSOURCE_MCK_PRESCALE_8"
	|| "DRV_TMR_CLKSOURCE_MCK_PRESCALE_32"
	|| "DRV_TMR_CLKSOURCE_MCK_PRESCALE_128"
	|| "DRV_TMR_CLKSOURCE_SCLK"
	|| "DRV_TMR_CLKSOURCE_XC0"
	|| "DRV_TMR_CLKSOURCE_XC1"
	|| "DRV_TMR_CLKSOURCE_XC2"

enum DRV_TMR_ALARM_TYPE
    "DRV_TMR_ALARM_TYPE_ONE_SHOT"
    || "DRV_TMR_ALARM_TYPE_PERIODIC"

enum DRV_TMR_OPERATION_MODE
    "DRV_TMR_OPERATION_MODE_NONE"
    || "DRV_TMR_OPERATION_MODE_16_BIT"
	|| "DRV_TMR_OPERATION_MODE_32_BIT"
    
enum DRV_TMR_MODE
    "DYNAMIC"
    
config USE_DRV_TMR_NEEDED
    bool

config USE_DRV_TMR
    depends on HAVE_TMR
    bool "Use Timer Driver?"
    select DRIVER
    default y if USE_DRV_TMR_NEEDED
    default n
    ---help---
    IDH_HTML_DRV_TMR_Timer_Driver_Library
    ---endhelp---

config DRV_TMR_DRIVER_MODE
    string "Driver Implementation"
    depends on USE_DRV_TMR
    default "DYNAMIC"
    ---help---
    IDH_HTML_DRV_TMR_Timer_Driver_Library
    ---endhelp---

ifblock  DRV_TMR_DRIVER_MODE = "DYNAMIC"
config DRV_TMR_CLIENTS_NUMBER
    int "Number of Clients"
    depends on USE_DRV_TMR
    default 1
    persistent
endif    

config DRV_TMR_INTERRUPT_MODE
    bool "Interrupt Mode"
    depends on USE_DRV_TMR
    select USE_SYS_INT_NEEDED
    default y
    ---help---
    IDH_HTML_DRV_TMR_INTERRUPT_MODE
    ---endhelp---

config DRV_TMR_INCLUDE_DRIVER
    bool
    depends on USE_DRV_TMR
    depends on DRV_TMR_DRIVER_MODE = "DYNAMIC"
    default y

config DRV_TMR_INCLUDE_INTERRUPT_SERVICE
    bool
    depends on USE_DRV_TMR
    depends on DRV_TMR_DRIVER_MODE = "DYNAMIC"
    depends on DRV_TMR_INTERRUPT_MODE
    default y

config DRV_TMR_INSTANCES_NUMBER
    int "Number of Timer Driver Instances"
    depends on USE_DRV_TMR
    range 1 TMR_NUMBER_OF_MODULES
    default 1
    ---help---
    IDH_HTML_DRV_TMR_INSTANCES_NUMBER
    ---endhelp---
  
source "$HARMONY_VERSION_PATH/framework/driver/tmr/config/drv_tmr_idx_pic32c.hconfig.ftl" 12 instances

endmenu 


enum DRV_TMR_INDEX
    "DRV_TMR_INDEX_0"
    || "DRV_TMR_INDEX_1"
    || "DRV_TMR_INDEX_2"
    || "DRV_TMR_INDEX_3"
    || "DRV_TMR_INDEX_4"
    || "DRV_TMR_INDEX_5"
    || "DRV_TMR_INDEX_6"
    || "DRV_TMR_INDEX_7"
    || "DRV_TMR_INDEX_8"
    || "DRV_TMR_INDEX_9"
	|| "DRV_TMR_INDEX_10"
	|| "DRV_TMR_INDEX_11"

ifblock USE_DRV_TMR

file DRV_TMR_H "$HARMONY_VERSION_PATH/framework/driver/tmr/drv_tmr.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/drv_tmr.h"
file DRV_TMR_MAPPING_H "$HARMONY_VERSION_PATH/framework/driver/tmr/drv_tmr_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/drv_tmr_mapping.h"
file DRV_TMR_VAR_MAPPING_H "$HARMONY_VERSION_PATH/framework/driver/tmr/src/drv_tmr_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/src/drv_tmr_variant_mapping.h"
file DRV_TMR_COMPAT_H "$HARMONY_VERSION_PATH/framework/driver/tmr/drv_tmr_compatibility.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/drv_tmr_compatibility.h"
file TMR_DEFINITIONS_PIC32C_H "$HARMONY_VERSION_PATH/framework/driver/tmr/tmr_definitions_pic32c.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/tmr_definitions_pic32c.h"

add "<#include \"/framework/driver/tmr/templates/drv_tmr.c.ftl\">"  to list SYSTEM_INIT_C_DRIVER_INITIALIZATION_DATA
add "<#include \"/framework/driver/tmr/templates/drv_tmr_tasks.c.ftl\">"  to list SYSTEM_TASKS_C_CALL_DRIVER_TASKS
add "<#include \"/framework/driver/tmr/templates/drv_tmr.h.ftl\">" to list SYSTEM_CONFIG_H_DRIVER_CONFIGURATION 

ifblock DRV_TMR_DRIVER_MODE = "DYNAMIC"

add "<#include \"/framework/driver/tmr/templates/drv_tmr_init.c.ftl\">"  to list SYSTEM_INIT_C_SYS_INITIALIZE_DRIVERS

file DRV_TMR_C "$HARMONY_VERSION_PATH/framework/driver/tmr/src/dynamic/drv_tmr_pic32c.c" to "$PROJECT_SOURCE_FILES/framework/driver/tmr/src/dynamic/drv_tmr.c"
file DRV_TMR_LOCAL_H "$HARMONY_VERSION_PATH/framework/driver/tmr/src/drv_tmr_local.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/src/drv_tmr_local.h"
file TIMER_PIC32CZ_H "$HARMONY_VERSION_PATH/framework/driver/tmr/src/dynamic/pic32cz/timer_pic32cz.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/src/pic32cz/timer_pic32cz.h"
file TIMER_PIC32CZ_C "$HARMONY_VERSION_PATH/framework/driver/tmr/src/dynamic/pic32cz/timer_pic32cz.c" to "$PROJECT_SOURCE_FILES/framework/driver/tmr/src/pic32cz/timer_pic32cz.c"
ifblock DRV_TMR_INTERRUPT_MODE
ifblock DRV_TMR_INST_0
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX0}_CH${CONFIG_DRV_TMR_CHANNEL_IDX0}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX0}_CH${CONFIG_DRV_TMR_CHANNEL_IDX0}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_1
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX1}_CH${CONFIG_DRV_TMR_CHANNEL_IDX1}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX1}_CH${CONFIG_DRV_TMR_CHANNEL_IDX1}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_2
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX2}_CH${CONFIG_DRV_TMR_CHANNEL_IDX2}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX2}_CH${CONFIG_DRV_TMR_CHANNEL_IDX2}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_3
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX3}_CH${CONFIG_DRV_TMR_CHANNEL_IDX3}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX3}_CH${CONFIG_DRV_TMR_CHANNEL_IDX3}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_4
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX4}_CH${CONFIG_DRV_TMR_CHANNEL_IDX4}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX4}_CH${CONFIG_DRV_TMR_CHANNEL_IDX4}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_5
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX5}_CH${CONFIG_DRV_TMR_CHANNEL_IDX5}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX5}_CH${CONFIG_DRV_TMR_CHANNEL_IDX5}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_6
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX6}_CH${CONFIG_DRV_TMR_CHANNEL_IDX6}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX6}_CH${CONFIG_DRV_TMR_CHANNEL_IDX6}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_7
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX7}_CH${CONFIG_DRV_TMR_CHANNEL_IDX7}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX7}_CH${CONFIG_DRV_TMR_CHANNEL_IDX7}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_8
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX8}_CH${CONFIG_DRV_TMR_CHANNEL_IDX8}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX8}_CH${CONFIG_DRV_TMR_CHANNEL_IDX8}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_9
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX9}_CH${CONFIG_DRV_TMR_CHANNEL_IDX9}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX9}_CH${CONFIG_DRV_TMR_CHANNEL_IDX9}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_10
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX10}_CH${CONFIG_DRV_TMR_CHANNEL_IDX10}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX10}_CH${CONFIG_DRV_TMR_CHANNEL_IDX10}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
ifblock DRV_TMR_INST_11
add "pfnTC${CONFIG_DRV_TMR_MODULE_IDX11}_CH${CONFIG_DRV_TMR_CHANNEL_IDX11}_Handler TC${CONFIG_DRV_TMR_MODULE_IDX11}_CH${CONFIG_DRV_TMR_CHANNEL_IDX11}_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
endif
endif
endif
ifblock !(USE_DRV_TMR)
add "pfnTC0_CH0_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC0_CH1_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC0_CH2_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC1_CH0_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC1_CH1_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC1_CH2_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC2_CH0_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC2_CH1_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC2_CH2_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC3_CH0_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC3_CH1_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
add "pfnTC3_CH2_Handler Dummy_Handler" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif
