%%{
/*
 * Copyright (c) 2018-2020 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== PIN.Board.h.xdt ========
 */

    /* PIN module passed in args[] */
    let PIN = args[0];
    let instances = PIN.$instances;
%%}
/*
 *  ======== PIN ========
 */
#include <ti/drivers/PIN.h>

extern const PIN_Config BoardGpioInitTable[];
% if (instances.length > 0) {

% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let comment = "";
    % if (inst.$hardware && inst.$hardware.displayName) {
    %     comment = "/* " + inst.$hardware.displayName + " (" + PIN.getDIO(inst) + ") */";
    % }
    % else if (inst.parentSignalDisplayName == "") {
    %     comment = "/* " + inst.$name + " (" + PIN.getDIO(inst) + ") */";
    % }
    % else if (inst.parentSignalDisplayName != "") {
    %     let hardwareName = "";
    %     if (inst.$ownedBy.$hardware && inst.$ownedBy.$hardware.displayName) {
    %         hardwareName = inst.$ownedBy.$hardware.displayName + ", ";
    %     }
    %     comment = "/* " + hardwareName + "Parent Signal: " + inst.$ownedBy.$name + " " + inst.parentSignalDisplayName + ", (" + PIN.getDIO(inst) + ") */";
    % }
    % if (comment != "") {
`comment`
    % }
#define `inst.$name`                   `PIN.getIOIDValue(inst)`
    %
% }
#define CONFIG_TI_DRIVERS_PIN_COUNT    `instances.length`
% }
