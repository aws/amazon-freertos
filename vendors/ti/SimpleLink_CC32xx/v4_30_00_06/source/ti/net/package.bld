/*
 * Copyright (c) 2014-2020, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');

Pkg.otherFiles = [
    "slneterr.h",
    "slnetif.h",
    "slnetconn.h",
    "slnetsock.h",
    "slnetutils.h",
    "slnet.h",
    "bsd/netdb.h",
    "bsd/sys/socket.h",
    "bsd/sys/select.h",
    "bsd/errnoutil.h",
    "bsd/netinet/in.h",
    "bsd/netinet/tcp.h",
    "bsd/arpa/inet.h",
    ".meta/ns.component.js",
    ".meta/HTTPClient.syscfg.js",
    ".meta/HTTPServer.syscfg.js",
    ".meta/MQTT.syscfg.js",
    ".meta/SNTP.syscfg.js",
    ".meta/SlNet.Config.c.xdt",
    ".meta/SlNet.syscfg.js",
    ".meta/SlNetConn.syscfg.js",
    ".meta/SecObj.syscfg.js",
    ".meta/Config.c.xdt",
    "package.bld"
];

var srcs = [
    "slnetsock.c",
    "slnetconn.c",
    "slnetutils.c",
    "slnetif.c",
    "bsd/netdb.c",
    "bsd/socket.c",
    "bsd/errnoutil.c"
];

/* lib/ is a generated directory that 'xdc clean' should remove */
Pkg.generatedFiles.$add("lib/");

Pkg.attrs.exportSrc = true;

for (var i = 0; i < Build.targets.length; i++) {
    var target = Build.targets[i];
    var libdir = getLibDirectory(target.suffix);

    for (var profile in target.profiles) {
        var defs = "";

        if (target.os == "Linux") {
            Pkg.addLibrary(libdir + "/slnetsock_" + profile, target, {
                profile: profile,
                suffix: '.a'
            }).addObjects(srcs);
        } else {
            defs = posixIncs + "/" +
                    getPosixIncDirectory(target.suffix);
            Pkg.addLibrary(libdir + "/slnetsock_" + profile,
                    target, {
                        profile: profile,
                        defs: defs,
                        suffix: '.a'
                    }).addObjects(srcs);
        }
    }
}
