<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
/***********************************************************************************************************************
  Purpose: Module Description File (MDF) Example (Schema Version 2.0)
           This is a description of a sample FIT module configuration file
***********************************************************************************************************************/
-->
<module xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="2.0" xs:noNamespaceSchemaLocation="schema_mdf_2.00.xsd">
    <fileVersion>1.00</fileVersion>
    <formatVersion>2.00</formatVersion>
    <fileTemplate></fileTemplate>
    <configuration>
        <property id="BSP_CFG_STARTUP_DISABLE" display="Start up select" default="0" type="combobox">
            <option id="BSP_CFG_STARTUP_DISABLE.0" display="Enable (use BSP startup)" value="0"/>
            <option id="BSP_CFG_STARTUP_DISABLE.1" display="Disable" value="1"/>
            <description>0 = Enable BSP startup program.
1 = Disable BSP startup program. (e.g. Using user startup program.)</description>
        </property>
        <property id="BSP_CFG_USER_STACK_ENABLE" display="User stack setting" default="1" type="combobox">
            <option id="BSP_CFG_USER_STACK_ENABLE.0" display="1 stack" value="0"/>
            <option id="BSP_CFG_USER_STACK_ENABLE.1" display="2 stacks" value="1"/>
            <description>0 = Use 1 stack. Disable user stack. User stack size set below will be ignored.
1 = Use 2 stacks. User stack and interrupt stack will both be used.</description>
        </property>
        <property id="#pragma stacksize su" display="User stack size" default="0x1000" keyword="    #pragma stacksize su=%s" type="textbox">
            <constraint display="when Start up select is Use Enable (use BSP startup) only" actionOnFail="disable">${BSP_CFG_STARTUP_DISABLE} == ${BSP_CFG_STARTUP_DISABLE.0}</constraint>
            <constraint display="when User stack setting is 2 stacks only" actionOnFail="disable">${BSP_CFG_USER_STACK_ENABLE} == ${BSP_CFG_USER_STACK_ENABLE.1}</constraint>
            <constraint display="Value must be an hexadecimal value" actionOnFail="error">testHexInteger("${#pragma stacksize su}")</constraint>
            <constraint display="Value must be in the range (0x1~RAM capacity)" actionOnFail="error">("${#pragma stacksize su}" &gt;= 1) &amp;&amp; ("${#pragma stacksize su}" &lt;= (${Device.ramSize} * 1024))</constraint>
            <description>User stack size</description>
        </property>
        <property id="#pragma stacksize si" display="interrupt stack size" default="0x400" keyword="#pragma stacksize si=%s" type="textbox">
            <constraint display="when Start up select is Use Enable (use BSP startup) only" actionOnFail="disable">${BSP_CFG_STARTUP_DISABLE} == ${BSP_CFG_STARTUP_DISABLE.0}</constraint>
            <constraint display="Value must be an hexadecimal value" actionOnFail="error">testHexInteger("${#pragma stacksize si}")</constraint>
            <constraint display="Value must be in the range (0x1~RAM capacity)" actionOnFail="error">("${#pragma stacksize si}" &gt;= 1) &amp;&amp; ("${#pragma stacksize si}" &lt;= (${Device.ramSize} * 1024))</constraint>
            <description>Interrupt stack  size</description>
        </property>
        <property id="BSP_CFG_HEAP_BYTES" display="Heap size" default="0x400" type="textbox">
            <constraint display="Value must be an hexadecimal value">testHexInteger("${BSP_CFG_HEAP_BYTES}")</constraint>
            <constraint display="Value must be in the range (0x1~RAM capacity)">("${BSP_CFG_HEAP_BYTES}" &gt;= 1) &amp;&amp; ("${BSP_CFG_HEAP_BYTES}" &lt;= (${Device.ramSize} * 1024))</constraint>
            <description>Heap size</description>
        </property>
        <property id="BSP_CFG_IO_LIB_ENABLE" display="Initializes C input and output library functions" default="1" type="combobox">
            <option id="BSP_CFG_IO_LIB_ENABLE.0" display="Disable" value="0"/>
            <option id="BSP_CFG_IO_LIB_ENABLE.1" display="Enable" value="1"/>
            <description>0 = Disable I/O library initialization in resetprg.c.
       If you are not using stdio then use this value.
1 = Enable I/O library initialization in resetprg.c.
      This is default and needed if you are using stdio.</description>
        </property>
        <property id="BSP_CFG_USER_CHARGET_ENABLED" display="Enable user stdio charget function" default="0" type="combobox">
            <option id="BSP_CFG_USER_CHARGET_ENABLED.0" display="Use BSP charget() function" value="0"/>
            <option id="BSP_CFG_USER_CHARGET_ENABLED.1" display="Use user charget() function" value="1"/>
            <description>0 = Use BSP charget() function.
1 = Use user charget() function.</description>
        </property>
        <property id="BSP_CFG_USER_CHARGET_FUNCTION" display="User stdio charget function name" default="my_sw_charget_function" type="textbox">
            <constraint display="when Enable user stdio charget function is Use user charget() function only" actionOnFail="disable">${BSP_CFG_USER_CHARGET_ENABLED} == ${BSP_CFG_USER_CHARGET_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_CHARGET_FUNCTION}")</constraint>
            <description>User charget() function name.</description>
        </property>
        <property id="BSP_CFG_USER_CHARPUT_ENABLED" display="Enable user stdio charput function" default="0" type="combobox">
            <option id="BSP_CFG_USER_CHARPUT_ENABLED.0" display="Use BSP charput() function" value="0"/>
            <option id="BSP_CFG_USER_CHARPUT_ENABLED.1" display="Use user charput() function" value="1"/>
            <description>0 = Use BSP charput() function.
1 = Use user charput() function.</description>
        </property>
        <property id="BSP_CFG_USER_CHARPUT_FUNCTION" display="User stdio charput function name" default="my_sw_charput_function" type="textbox">
            <constraint display="when Enable user stdio charput function is Use user charput() function only" actionOnFail="disable">${BSP_CFG_USER_CHARPUT_ENABLED} == ${BSP_CFG_USER_CHARPUT_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_CHARPUT_FUNCTION}")</constraint>
            <description>User charput() function name.</description>
        </property>
        <property id="BSP_CFG_RUN_IN_USER_MODE" display="Processor Mode section" default="0" type="combobox">
            <option id="BSP_CFG_RUN_IN_USER_MODE.0" display="Stay in Supervisor mode" value="0"/>
            <option id="BSP_CFG_RUN_IN_USER_MODE.1" display="Switch to User mode" value="1"/>
            <description>0 = Stay in Supervisor mode.
1 = Switch to User mode.</description>
        </property>
        <property id="BSP_CFG_USER_BOOT_ENABLE" display="User Boot Mode" default="0" type="combobox">
            <option id="BSP_CFG_USER_BOOT_ENABLE.0" display="Stay in Supervisor mode" value="0"/>
            <option id="BSP_CFG_USER_BOOT_ENABLE.1" display="Switch to User mode" value="1"/>
            <description>0 = Stay in Supervisor mode.
1 = Switch to User mode.</description>
        </property>
        <property id="BSP_CFG_TRUSTED_MODE_FUNCTION" display="TMEF - TM Enable Flag Register" default="0xFFFFFFFF" type="textbox">
            <constraint display="Value must be an hexadecimal value">testHexInteger("${BSP_CFG_TRUSTED_MODE_FUNCTION}")</constraint>
            <constraint display="Value must be in the range 0x00000000~0xFFFFFFFF">("${BSP_CFG_TRUSTED_MODE_FUNCTION}" &gt;= 0) &amp;&amp; ("${BSP_CFG_TRUSTED_MODE_FUNCTION}" &lt;= 0xFFFFFFFF)</constraint>
            <description>TMEF register value.</description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_ENABLED" display="Lock function select" default="0" type="combobox">
            <option id="BSP_CFG_USER_LOCKING_ENABLED.0" display="Use default locking (non-RTOS)" value="0"/>
            <option id="BSP_CFG_USER_LOCKING_ENABLED.1" display="Use user defined locking mechanism " value="1"/>
            <description>0 = Use default locking (non-RTOS)
1 = Use user defined locking mechanism. </description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_TYPE" display="Lock function type" default="bsp_lock_t" type="textbox">
            <constraint display="when Lock function select is Use user defined locking mechanism only" actionOnFail="disable">${BSP_CFG_USER_LOCKING_ENABLED} == ${BSP_CFG_USER_LOCKING_ENABLED.1}</constraint>
            <constraint display="Please enter a valid type name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_LOCKING_TYPE}")</constraint>
            <description>Data type to be used for locks.</description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_HW_LOCK_FUNCTION" display="HW lock function name" default="my_hw_locking_function" type="textbox">
            <constraint display="when Lock function select is Use user defined locking mechanism only" actionOnFail="disable">${BSP_CFG_USER_LOCKING_ENABLED} == ${BSP_CFG_USER_LOCKING_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_LOCKING_HW_LOCK_FUNCTION}")</constraint>
            <description>User defined functions to be called when r_bsp lock functions are overridden by user.</description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_HW_UNLOCK_FUNCTION" display="HW unlock function name" default="my_hw_unlocking_function" type="textbox">
            <constraint display="when Lock function select is Use user defined locking mechanism only" actionOnFail="disable">${BSP_CFG_USER_LOCKING_ENABLED} == ${BSP_CFG_USER_LOCKING_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_LOCKING_HW_UNLOCK_FUNCTION}")</constraint>
            <description>User defined functions to be called when r_bsp lock functions are overridden by user.</description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_SW_LOCK_FUNCTION" display="SW lock function name" default="my_sw_locking_function" type="textbox">
            <constraint display="when Lock function select is Use user defined locking mechanism only" actionOnFail="disable">${BSP_CFG_USER_LOCKING_ENABLED} == ${BSP_CFG_USER_LOCKING_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_LOCKING_SW_LOCK_FUNCTION}")</constraint>
            <description>User defined functions to be called when r_bsp lock functions are overridden by user.</description>
        </property>
        <property id="BSP_CFG_USER_LOCKING_SW_UNLOCK_FUNCTION" display="SW unlock function name" default="my_sw_unlocking_function" type="textbox">
            <constraint display="when Lock function select is Use user defined locking mechanism only" actionOnFail="disable">${BSP_CFG_USER_LOCKING_ENABLED} == ${BSP_CFG_USER_LOCKING_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_LOCKING_SW_UNLOCK_FUNCTION}")</constraint>
            <description>User defined functions to be called when r_bsp lock functions are overridden by user.</description>
        </property>
        <property id="BSP_CFG_USER_WARM_START_CALLBACK_PRE_INITC_ENABLED" display="Enable user warm start callback (PRE)" default="0" type="combobox">
            <option id="BSP_CFG_USER_WARM_START_CALLBACK_PRE_INITC_ENABLED.0" display="Unsed" value="0"/>
            <option id="BSP_CFG_USER_WARM_START_CALLBACK_PRE_INITC_ENABLED.1" display="Used" value="1"/>
            <description>0 = Warm start callback pre function is not to be used.
1 = Warm start callback pre function is to be used.</description>
        </property>
        <property id="BSP_CFG_USER_WARM_START_PRE_C_FUNCTION" display="User warm start callback  function name (PRE)" default="my_sw_warmstart_prec_function" type="textbox">
            <constraint display="when User warm start callback  function name (PRE) is Used only" actionOnFail="disable">${BSP_CFG_USER_WARM_START_CALLBACK_PRE_INITC_ENABLED} == ${BSP_CFG_USER_WARM_START_CALLBACK_PRE_INITC_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_WARM_START_PRE_C_FUNCTION}")</constraint>
            <description>User warm start callback pre function name.</description>
        </property>
        <property id="BSP_CFG_USER_WARM_START_CALLBACK_POST_INITC_ENABLED" display="Enable user warm start callback (POST)" default="0" type="combobox">
            <option id="BSP_CFG_USER_WARM_START_CALLBACK_POST_INITC_ENABLED.0" display="Unsed" value="0"/>
            <option id="BSP_CFG_USER_WARM_START_CALLBACK_POST_INITC_ENABLED.1" display="Used" value="1"/>
            <description>0 = Warm start callback post function is not to be used.
1 = Warm start callback post function is to be used.</description>
        </property>
        <property id="BSP_CFG_USER_WARM_START_POST_C_FUNCTION" display="User warm start callback  function name (POST)" default="my_sw_warmstart_postc_function" type="textbox">
            <constraint display="when User warm start callback  function name (POST) is Used only" actionOnFail="disable">${BSP_CFG_USER_WARM_START_CALLBACK_POST_INITC_ENABLED} == ${BSP_CFG_USER_WARM_START_CALLBACK_POST_INITC_ENABLED.1}</constraint>
            <constraint display="Please enter a valid function name without spaces or funny characters" actionOnFail="error">testSymbol("${BSP_CFG_USER_WARM_START_POST_C_FUNCTION}")</constraint>
            <description>User warm start callback post function name.</description>
        </property>
        <property id="BSP_CFG_PARAM_CHECKING_ENABLE" display="Parameter checking" default="1" type="combobox">
            <option id="BSP_CFG_PARAM_CHECKING_ENABLE.0" display="Disabled" value="0"/>
            <option id="BSP_CFG_PARAM_CHECKING_ENABLE.1" display="Enabled" value="1"/>
            <description>0 = Global setting for parameter checking is disabled. 
1 = Global setting for parameter checking is enabled.</description>
        </property>
    </configuration>
</module>
