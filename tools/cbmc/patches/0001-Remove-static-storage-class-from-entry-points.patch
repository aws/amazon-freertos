From 9b79f2d835eb542f970088623343ae8962f1550a Mon Sep 17 00:00:00 2001
From: "Mark R. Tuttle" <mrtuttle@amazon.com>
Date: Wed, 11 Sep 2019 09:39:27 -0400
Subject: [PATCH] Remove static storage class from entry points

Many of the entry points we wish to test are marked as being static.
This commit removes the static keyword from all entry points that we
test.

Patch revised on September 11, 2019.
---
 .../standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c        |  6 +++---
 .../standard/freertos_plus_tcp/source/FreeRTOS_DNS.c         | 12 ++++++------
 .../standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c     |  2 +-
 3 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
index c4f79e8e7..d8089a5e7 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DHCP.c
@@ -198,7 +198,7 @@ static void prvSendDHCPDiscover( void );
 /*
  * Interpret message received on the DHCP socket.
  */
-static BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType );
+BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType );
 
 /*
  * Generate a DHCP request packet, and send it on the DHCP socket.
@@ -234,7 +234,7 @@ static void prvCreateDHCPSocket( void );
 /*-----------------------------------------------------------*/
 
 /* The next DHCP transaction Id to be used. */
-static DHCPData_t xDHCPData;
+DHCPData_t xDHCPData;
 
 /*-----------------------------------------------------------*/
 
@@ -607,7 +607,7 @@ static void prvInitialiseDHCP( void )
 }
 /*-----------------------------------------------------------*/
 
-static BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType )
+BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType )
 {
 uint8_t *pucUDPPayload, *pucLastByte;
 struct freertos_sockaddr xClient;
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
index 02bb75b08..1ceabb08e 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_DNS.c
@@ -116,7 +116,7 @@ static size_t prvCreateDNSMessage( uint8_t *pucUDPPayloadBuffer,
 /*
  * Simple routine that jumps over the NAME field of a resource record.
  */
-static uint8_t * prvSkipNameField( uint8_t *pucByte,
+uint8_t * prvSkipNameField( uint8_t *pucByte,
 								   size_t xSourceLen );
 
 /*
@@ -124,7 +124,7 @@ static uint8_t * prvSkipNameField( uint8_t *pucByte,
  * The parameter 'xExpected' indicates whether the identifier in the reply
  * was expected, and thus if the DNS cache may be updated with the reply.
  */
-static uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer,
+uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer,
 								  size_t xBufferLength,
 								  BaseType_t xExpected );
 
@@ -152,7 +152,7 @@ static uint32_t prvGetHostByName( const char *pcHostName,
 
 
 #if( ipconfigUSE_DNS_CACHE == 1 ) || ( ipconfigDNS_USE_CALLBACKS == 1 )
-	static uint8_t * prvReadNameField( uint8_t *pucByte,
+	uint8_t * prvReadNameField( uint8_t *pucByte,
 									   size_t xSourceLen,
 									   char *pcName,
 									   size_t xLen );
@@ -765,7 +765,7 @@ static const DNSMessage_t xDefaultPartDNSHeader =
 
 #if( ipconfigUSE_DNS_CACHE == 1 ) || ( ipconfigDNS_USE_CALLBACKS == 1 )
 
-	static uint8_t * prvReadNameField( uint8_t *pucByte,
+	uint8_t * prvReadNameField( uint8_t *pucByte,
 									   size_t xSourceLen,
 									   char *pcName,
 									   size_t xDestLen )
@@ -843,7 +843,7 @@ static const DNSMessage_t xDefaultPartDNSHeader =
 #endif /* ipconfigUSE_DNS_CACHE || ipconfigDNS_USE_CALLBACKS */
 /*-----------------------------------------------------------*/
 
-static uint8_t * prvSkipNameField( uint8_t *pucByte,
+uint8_t * prvSkipNameField( uint8_t *pucByte,
 								   size_t xSourceLen )
 {
 size_t xChunkLength;
@@ -946,7 +946,7 @@ size_t xChunkLength;
 #endif /* ipconfigUSE_NBNS */
 /*-----------------------------------------------------------*/
 
-static uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer,
+uint32_t prvParseDNSReply( uint8_t *pucUDPPayloadBuffer,
 								  size_t xBufferLength,
 								  BaseType_t xExpected )
 {
diff --git a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
index 1f5a845fa..1a69807c0 100644
--- a/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
+++ b/libraries/freertos_plus/standard/freertos_plus_tcp/source/FreeRTOS_TCP_WIN.c
@@ -206,7 +206,7 @@ extern void vListInsertGeneric( List_t * const pxList, ListItem_t * const pxNewL
 
 /* List of free TCP segments. */
 #if( ipconfigUSE_TCP_WIN == 1 )
-	static List_t xSegmentList;
+	List_t xSegmentList;
 #endif
 
 /* Logging verbosity level. */
-- 
2.14.3 (Apple Git-98)

