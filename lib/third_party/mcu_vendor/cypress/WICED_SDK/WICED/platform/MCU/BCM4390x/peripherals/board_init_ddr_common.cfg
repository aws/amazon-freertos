#
# $ Copyright Cypress Semiconductor $
#

# This wrapper is for easier porting of DDR script provided by ASIC.
proc hexpr { args } {
   return 0x[format %llx [uplevel expr $args]]
}

# Register read/write
# This wrapper is for easier porting of DDR script provided by ASIC
# Wrapper does not support all original 'pci' procedure options, so be careful.
proc pci { operation address {size 4} {data 0} } {
   if {$operation == "w"} {
       mww $address $data
   } else {
       set res [hexpr [memread32 $address]]
       return $res
   }
}

#Reset DDR Block and turn on clocks.
proc program_ddrcore_reset { } {

set ht_mask 0x30081377
set max_res_mask_reg_addr 0x1802061c
set max_res_mask_reg_rdata  [pci r $max_res_mask_reg_addr]
set max_res_mask_reg_data [hexpr $max_res_mask_reg_rdata | $ht_mask]
pci w $max_res_mask_reg_addr 4 $max_res_mask_reg_data

sleep 10

pci w 0x1810b800 4 0x1  ;# turn on resetn
pci w 0x1810b408 4 0x3  ;# turn on clocks
pci w 0x1810b800 4 0x0  ;# turn off resetn
pci w 0x1810b408 4 0x1  ;# turn off force clock

sleep 10

}

#Turn the pads RX on and enable termination
proc program_ddrcore_pads { } {

pci w 0x1800b048 4 0x0         ;# turn on Termination and RX of pads on
pci w 0x1800b04c 4 0x01010101  ;# turn on Termination and RX of pads on

}
