/**
@mainpage
@anchor static_memory
@brief @copybrief iot_static_memory.h <br><br>

The static memory component provides statically-allocated buffers that are used instead of dynamic memory allocation when @ref IOT_STATIC_MEMORY_ONLY is `1`. Using static memory only <b>does not guarantee that memory allocation will always succeed</b>; it's possible for all statically-allocated buffers to be in-use. However, static memory only <b>can guarantee the availability of <i>at least</i> a certain amount of resources</b>. Because space must be reserved for statically-allocated buffers, binaries compiled with static memory only will be larger.

@section static_memory_types Types of buffers
@brief The types of statically-allocated buffers provided by the static memory component.

@subsection static_memory_types_messagebuffers Message buffers
Message buffers are fixed-size buffers used for strings, such as log messages or bytes transmitted over a network. Their size and number can be configured with the constants @ref IOT_MESSAGE_BUFFERS (number) and @ref IOT_MESSAGE_BUFFER_SIZE (size of each message buffer). Message buffers may be used by any library, and are analogous to the generic buffers allocated by [malloc](http://pubs.opengroup.org/onlinepubs/9699919799/functions/malloc.html) (though all message buffers are the same size).

@subsection static_memory_mqtt MQTT static buffers
@brief Statically-allocated buffers used by the [MQTT library](@ref mqtt).

@subsubsection static_memory_types_mqttconnections Connections
MQTT connections correspond to a statically-allocated MQTT session between a single client and server. In static memory mode, the number of simultaneous, active MQTT connections is controlled by the constant @ref IOT_MQTT_CONNECTIONS.

@subsubsection static_memory_types_mqttoperations Operations
MQTT operations correspond to in-progress requests between a client and the MQTT server, such as CONNECT, PUBLISH, or publish acknowledgement (PUBACK). In static memory mode, the number of simultaneous, active MQTT operations is controlled by the constant @ref IOT_MQTT_MAX_IN_PROGRESS_OPERATIONS.

@subsubsection static_memory_types_mqttsubscriptions Subscriptions
MQTT subscriptions store records on callbacks registered for MQTT topic filters. In static memory mode, the number of simultaneous, active MQTT subscriptions (across all connections) is controlled by the constant @ref IOT_MQTT_SUBSCRIPTIONS.

@subsection static_memory_shadow Shadow static buffers
@brief Statically-allocated buffers used by the [Shadow library](@ref shadow).

@subsubsection static_memory_types_shadowoperations Operations
Shadow operations correspond to in-progress Shadow [DELETE](@ref shadow_function_delete), [GET](@ref shadow_function_get), or [UPDATE](@ref shadow_function_update) operations. In static memory mode, the number of simultaneous, active Shadow operations is controlled by the constant @ref AWS_IOT_SHADOW_MAX_IN_PROGRESS_OPERATIONS.

@subsubsection static_memory_types_shadowsubscriptions Subscriptions
A Shadow subscriptions object groups MQTT subscriptions for a Thing. Shadow operations require pairs of subscriptions to determine their status (i.e. `/accepted` or `/rejected`); these subscriptions (as well as subscriptions for Shadow callbacks) are tracked by a Shadow subscriptions object. In static memory mode, the number of simultaneous, active Shadow subscriptions is controlled by the constant @ref AWS_IOT_SHADOW_SUBSCRIPTIONS.

@dependencies_section{static_memory}
@dependencies_brief{static memory component}

@dot "Static memory direct dependencies"
digraph static_memory_dependencies
{
    node[shape=box, fontname=Helvetica, fontsize=10, style=filled];
    static_memory[label="Static memory", fillcolor="#aed8a9ff"];
    subgraph
    {
        rank = same;
        operating_system[label="Operating system", fillcolor="#999999ff"]
        standard_library[label="Standard library\nstdbool, stddef, string", fillcolor="#d15555ff"];
    }
    static_memory -> operating_system;
    static_memory -> standard_library;
}
@enddot

Currently, the static memory component has the following dependencies:
- The operating system must provide a mechanism to implement critical sections.
*/

/**
@config_page{static_memory}
@config_brief{statically-allocated buffer pools}

@section IOT_MESSAGE_BUFFERS
@brief The number of statically-allocated [message buffers](@ref static_memory_types_messagebuffers). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see @ref static_memory_types_messagebuffers

@configpossible Any positive integer. <br>
@configdefault `8`

@section IOT_MESSAGE_BUFFER_SIZE
@brief The size (in bytes) of each statically-allocated [message buffer](@ref static_memory_types_messagebuffers). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see @ref static_memory_types_messagebuffers

@configpossible Any positive integer. <br>
@configdefault `1024`

@section IOT_MQTT_CONNECTIONS
@brief The number of statically-allocated [MQTT connections](@ref static_memory_types_mqttconnections). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see [MQTT connections](@ref static_memory_types_mqttconnections)

@configpossible Any positive integer. <br>
@configdefault `1`

@section IOT_MQTT_MAX_IN_PROGRESS_OPERATIONS
@brief The number of statically-allocated [MQTT operations](@ref static_memory_types_mqttoperations). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see [In-progress MQTT operations](@ref static_memory_types_mqttoperations)

@configpossible Any positive integer. <br>
@configdefault `10`

@section IOT_MQTT_SUBSCRIPTIONS
@brief The number of statically-allocated [MQTT subscriptions](@ref static_memory_types_mqttsubscriptions). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see [MQTT subscriptions](@ref static_memory_types_mqttsubscriptions)

@configpossible Any positive integer. <br>
@configdefault `8`

@section AWS_IOT_SHADOW_MAX_IN_PROGRESS_OPERATIONS
@brief The number of statically-allocated [Shadow operations](@ref static_memory_types_shadowoperations). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see [In-progress Shadow operations](@ref static_memory_types_shadowoperations)

@configpossible Any positive integer. <br>
@configdefault `10`

@section AWS_IOT_SHADOW_SUBSCRIPTIONS
@brief The number of statically-allocated [Shadow subscriptions](@ref static_memory_types_shadowsubscriptions). This setting has no effect if @ref IOT_STATIC_MEMORY_ONLY is `0`.

@see [Shadow subscriptions objects](@ref static_memory_types_shadowsubscriptions)

@configpossible Any positive integer. <br>
@configdefault `2`
*/
