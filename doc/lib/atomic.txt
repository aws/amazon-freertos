/**
@mainpage
@anchor atomic
@brief Atomic data structures and functions. <br><br>

Provide lock-free and wait-free mutually exclusive access to a memory location. 
*/

/**
@config_page{Atomic}
@config_brief{library}

@brief Atomic component does not need a configuration file. We do, however, provide two implementations -- the default atomic implementation (implemented with enter/exit critical section) and optimized atomic implementation (implemented with GCC atomic built-in, which gets compiled into architecture supported atomic instructions). To use the default implementation, user solely needs to import atomic.h. To use optimized atomic implementation, user needs to confirm whether GCC compiler version in use supports atomic built-in functions (>= 4.7), and whether the target architecture has atomic instructions. 

@section configUSE_GCC_BUILTIN_ATOMICS
@brief To use optimized implementation, define this macro in project specific FreeRTOSConfig.h AND set the value to 1.

*/

/**
@functions_page{atomic, Atomic}
@functions_brief{atomic}
- @function_name{atomic_function_atomic_compareandswap_u32}
@function_brief{atomic_function_atomic_compareandswap_u32}
- @function_name{atomic_function_atomic_swappointers_p32}
@function_brief{atomic_function_atomic_swappointers_p32}
- @function_name{atomic_function_atomic_compareandswappointers_p32}
@function_brief{atomic_function_atomic_compareandswappointers_p32}
- @function_name{atomic_function_atomic_add_u32}
@function_brief{atomic_function_atomic_add_u32}
- @function_name{atomic_function_atomic_subtract_u32}
@function_brief{atomic_function_atomic_subtract_u32}
- @function_name{atomic_function_atomic_increment_u32}
@function_brief{atomic_function_atomic_increment_u32}
- @function_name{atomic_function_atomic_decrement_u32}
@function_brief{atomic_function_atomic_decrement_u32}
- @function_name{atomic_function_atomic_or_u32}
@function_brief{atomic_function_atomic_or_u32}
- @function_name{atomic_function_atomic_and_u32}
@function_brief{atomic_function_atomic_and_u32}
- @function_name{atomic_function_atomic_nand_u32}
@function_brief{atomic_function_atomic_nand_u32}
- @function_name{atomic_function_atomic_xor_u32}
@function_brief{atomic_function_atomic_xor_u32}

*/

/**
@function_page{Atomic_CompareAndSwap_u32,atomic,atomic_compareandswap_u32}
@function_snippet{atomic,atomic_compareandswap_u32,atomic.h}
@copydoc Atomic_CompareAndSwap_u32

@function_page{Atomic_SwapPointers_p32,atomic,atomic_swappointers_p32}
@function_snippet{atomic,atomic_compareandswap_u32,atomic.h}
@copydoc Atomic_CompareAndSwap_u32

@function_page{Atomic_CompareAndSwapPointers_p32,atomic,atomic_compareandswappointers_p32}
@function_snippet{atomic,atomic_compareandswappointers_p32,atomic.h}
@copydoc Atomic_CompareAndSwapPointers_p32

@function_page{Atomic_Add_u32,atomic,atomic_add_u32}
@function_snippet{atomic,atomic_add_u32,atomic.h}
@copydoc Atomic_Add_u32

@function_page{Atomic_Subtract_u32,atomic,atomic_subtract_u32}
@function_snippet{atomic,atomic_subtract_u32,atomic.h}
@copydoc Atomic_Subtract_u32

@function_page{Atomic_Increment_u32,atomic,atomic_increment_u32}
@function_snippet{atomic,atomic_increment_u32,atomic.h}
@copydoc Atomic_Increment_u32

@function_page{Atomic_Decrement_u32,atomic,atomic_decrement_u32}
@function_snippet{atomic,atomic_decrement_u32,atomic.h}
@copydoc Atomic_Decrement_u32

@function_page{Atomic_OR_u32,atomic,atomic_or_u32}
@function_snippet{atomic,atomic_or_u32,atomic.h}
@copydoc Atomic_OR_u32

@function_page{Atomic_AND_u32,atomic,atomic_and_u32}
@function_snippet{atomic,atomic_and_u32,atomic.h}
@copydoc Atomic_AND_u32

@function_page{Atomic_NAND_u32,atomic,atomic_nand_u32}
@function_snippet{atomic,atomic_nand_u32,atomic.h}
@copydoc Atomic_NAND_u32

@function_page{Atomic_XOR_u32,atomic,atomic_xor_u32}
@function_snippet{atomic,atomic_xor_u32,atomic.h}
@copydoc Atomic_XOR_u32

*/